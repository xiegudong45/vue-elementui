{"remainingRequest":"/Users/xieshenghao/Desktop/base-learn/node_modules/babel-loader/lib/index.js!/Users/xieshenghao/Desktop/base-learn/src/store/count.js","dependencies":[{"path":"/Users/xieshenghao/Desktop/base-learn/src/store/count.js","mtime":1587789586567},{"path":"/Users/xieshenghao/Desktop/base-learn/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xieshenghao/Desktop/base-learn/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiB7CiAgICBjb3VudDogMAogIH0sCiAgZ2V0dGVyczogewogICAgZG91YmxlQ291bnQ6IGZ1bmN0aW9uIGRvdWJsZUNvdW50KHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jb3VudCAqIDI7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGFkZDogZnVuY3Rpb24gYWRkKHN0YXRlKSB7CiAgICAgIHN0YXRlLmNvdW50Kys7CiAgICB9LAogICAgZGVjcmVhc2U6IGZ1bmN0aW9uIGRlY3JlYXNlKHN0YXRlKSB7CiAgICAgIHN0YXRlLmNvdW50LS07CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBkZWxheUFkZDogZnVuY3Rpb24gZGVsYXlBZGQoY29udGV4dCkgewogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBjb250ZXh0LmNvbW1pdCgnYWRkJyk7CiAgICAgIH0sIDEwMDApOwogICAgfQogIH0sCiAgbW9kdWxlczoge30KfTs="},{"version":3,"sources":["/Users/xieshenghao/Desktop/base-learn/src/store/count.js"],"names":["state","count","getters","doubleCount","mutations","add","decrease","actions","delayAdd","context","setTimeout","commit","modules"],"mappings":"AAAA,eAAe;AACbA,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GADM;AAIbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,uBACKH,KADL,EACY;AACjB,aAAOA,KAAK,CAACC,KAAN,GAAc,CAArB;AACD;AAHM,GAJI;AASbG,EAAAA,SAAS,EAAE;AACTC,IAAAA,GADS,eACLL,KADK,EACE;AACTA,MAAAA,KAAK,CAACC,KAAN;AACD,KAHQ;AAITK,IAAAA,QAJS,oBAIAN,KAJA,EAIO;AACdA,MAAAA,KAAK,CAACC,KAAN;AACD;AANQ,GATE;AAiBbM,EAAAA,OAAO,EAAE;AACPC,IAAAA,QADO,oBACEC,OADF,EACW;AAChBC,MAAAA,UAAU,CAAC,YAAM;AACfD,QAAAA,OAAO,CAACE,MAAR,CAAe,KAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AALM,GAjBI;AAwBbC,EAAAA,OAAO,EAAE;AAxBI,CAAf","sourcesContent":["export default {\n  state: {\n    count: 0,\n  },\n  getters: {\n    doubleCount(state) {\n      return state.count * 2\n    }\n  },\n  mutations: {\n    add(state) {\n      state.count++\n    },\n    decrease(state) {\n      state.count--\n    }\n  },\n  actions: {\n    delayAdd(context) {\n      setTimeout(() => {\n        context.commit('add')\n      }, 1000)\n    }\n  },\n  modules: {\n    \n  }\n}"]}]}